local p2p = require("examples.peer_to_peer.peer_to_peer_discovery")
local simple_input = require("modules.simple_input")


function init(self)
	simple_input.acquire()
	self.p2p_instance = p2p.create()
	
	local broadcast_message = "MyCoolServer"
	
	local broadcast = gui.get_node("broadcast/bg")
	local listen = gui.get_node("listen/bg")
	local stop = gui.get_node("stop/bg")
	
	gui.set_enabled(stop, false)

	simple_input.register(broadcast, function()
		gui.set_enabled(stop, true)
		gui.set_enabled(broadcast, false)
		gui.set_enabled(listen, false)
		local ok, err = self.p2p_instance.broadcast(broadcast_message)
		if not ok then
			print("Error when broadcasting", err)
		end
	end)
	
	simple_input.register(listen, function()
		gui.set_enabled(stop, true)
		gui.set_enabled(broadcast, false)
		gui.set_enabled(listen, false)
		local ok, err = self.p2p_instance.listen(broadcast_message, function(server_ip, port)
			print("Found server: " .. server_ip .. ":" .. port)
		end)
		if not ok then
			print("Error when listening", err)
		end
	end)
	
	simple_input.register(stop, function()
		gui.set_enabled(stop, false)
		gui.set_enabled(broadcast, true)
		gui.set_enabled(listen, true)
		self.p2p_instance.stop()
	end)
end

function final(self)
	simple_input.release()
end

function update(self, dt)
	if self.p2p_instance then
		self.p2p_instance.update(dt)
	end
end

function on_message(self, message_id, message, sender)
    -- Add message-handling code here
    -- Remove this function if not needed
end

function on_input(self, action_id, action)
	simple_input.on_input(action_id, action)
end
